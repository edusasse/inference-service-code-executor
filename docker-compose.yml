version: '3.8'

networks:
  internal_network:
    driver: bridge
  external_network:
    driver: bridge

services:
  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data_volume:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal_network
      - external_network

  redis:
    image: redis:latest  # You can specify a specific version here
    ports:
      - "6379:6379"  # Default Redis port
    volumes:
      - redis_data_volume:/data  # Persistent storage for Redis data
    networks:
      - internal_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - internal_network

volumes:
  rabbitmq_data_volume:
  redis_data_volume: